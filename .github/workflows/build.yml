name: ci-build-image

on:
  pull_request:
    branches: [ dev ]

  workflow_dispatch:

jobs:
  mpspdz_base:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: mpspdz - build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: buildenv
          build-args: |
            arch=x86-64
            use_ntl=1
            prep_dir=/opt/preprocessing-data
            ssl_dir="/opt/ssl"
            cryptoplayers=4
          tags: |
            initc3/mpspdz,
            initc3/mpspdz:${{ github.head_ref }},
            initc3/mpspdz:${{ steps.vars.outputs.short_sha }}

  malicious-shamir-party:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: malicious-shamir-party.x - build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: machine
          build-args: |
            arch=x86-64
            machine=malicious-shamir-party.x
            prep_dir=/opt/preprocessing-data
            ssl_dir=/opt/ssl
            cryptoplayers=4
            gfp_mod_sz=4
          tags: |
            initc3/malicious-shamir-party.x,
            initc3/malicious-shamir-party.x:${{ github.head_ref }},
            initc3/malicious-shamir-party.x:${{ steps.vars.outputs.short_sha }}

  mal-shamir-offline:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: mal-shamir-offline.x - build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: machine
          build-args: |
            arch=x86-64
            machine=mal-shamir-offline.x
            prep_dir=/opt/preprocessing-data
            ssl_dir=/opt/ssl
            cryptoplayers=4
            gfp_mod_sz=4
          tags: |
            initc3/mal-shamir-offline.x,
            initc3/mal-shamir-offline.x:${{ github.head_ref }},
            initc3/mal-shamir-offline.x:${{ steps.vars.outputs.short_sha }}

  random-shamir:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: random-shamir.x - build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: machine
          build-args: |
            arch=x86-64
            machine=random-shamir.x
            prep_dir=/opt/inputmask-shares
            ssl_dir=/opt/ssl
            cryptoplayers=4
            gfp_mod_sz=4
          tags: |
            initc3/random-shamir.x,
            initc3/random-shamir.x:${{ github.head_ref }},
            initc3/random-shamir.x:${{ steps.vars.outputs.short_sha }}

  mal-shamir:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: mal-shamir programs - build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: mal-shamir.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: arch=x86-64
          tags: |
            initc3/mal-shamir,
            initc3/mal-shamir:${{ github.head_ref }},
            initc3/mal-shamir:${{ steps.vars.outputs.short_sha }}
