name: ci-build-and-push-image

on:
  push:
    branches: [ dev ]

  workflow_dispatch:

jobs:
  mpspdz-base:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: mpspdz - build & push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: base
          push: true
          build-args: arch=x86-64
          tags: |
            initc3/mpspdz,
            initc3/mpspdz:${{ github.ref_name }},
            initc3/mpspdz:${{ steps.vars.outputs.short_sha }}
          cache-from: type=registry,ref=initc3/mpspdz:buildcache
          cache-to: type=registry,ref=initc3/mpspdz:buildcache,mode=max

  malicious-shamir-party:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: malicious-shamir-party.x - build & push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            arch=x86-64
            program=malicious-shamir-party.x
            prep_dir=/opt/preprocessing-data
          tags: |
            initc3/malicious-shamir-party.x,
            initc3/malicious-shamir-party.x:${{ github.ref_name }},
            initc3/malicious-shamir-party.x:${{ steps.vars.outputs.short_sha }}
          cache-from: type=registry,ref=initc3/malicious-shamir-party.x:buildcache
          cache-to: type=registry,ref=initc3/malicious-shamir-party.x:buildcache,mode=max

  mal-shamir-offline:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: mal-shamir-offline.x - build & push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            arch=x86-64
            program=mal-shamir-offline.x
          tags: |
            initc3/mal-shamir-offline.x,
            initc3/mal-shamir-offline.x:${{ github.ref_name }},
            initc3/mal-shamir-offline.x:${{ steps.vars.outputs.short_sha }}
          cache-from: type=registry,ref=initc3/mal-shamir-offline.x:buildcache
          cache-to: type=registry,ref=initc3/mal-shamir-offline.x:buildcache,mode=max

  random-shamir:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: random-shamir.x - build & push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            arch=x86-64
            program=random-shamir.x
            prep_dir=/opt/inputmask-shares
          tags: |
            initc3/random-shamir.x,
            initc3/random-shamir.x:${{ github.ref_name }},
            initc3/random-shamir.x:${{ steps.vars.outputs.short_sha }}
          cache-from: type=registry,ref=initc3/random-shamir.x:buildcache
          cache-to: type=registry,ref=initc3/random-shamir.x:buildcache,mode=max

  mal-shamir:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set Short SHA
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      -
        name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: mal-shamir programs - build & push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: mal-shamir.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: arch=x86-64
          tags: |
            initc3/mal-shamir,
            initc3/mal-shamir:${{ github.ref_name }},
            initc3/mal-shamir:${{ steps.vars.outputs.short_sha }}
          cache-from: type=registry,ref=initc3/mal-shamir:buildcache
          cache-to: type=registry,ref=initc3/mal-shamir:buildcache,mode=max
