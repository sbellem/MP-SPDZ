program.bit_length = 255
print("program.bit_length: ", program.bit_length)
program.security = 40

from testmodule import test_module
test_module()

# MiMC
rounds = 161

@vectorize
def mimc_prf(m, key):
    x = m

    for r in range(rounds):
        x = (x + key + r) ** 3

    x = x + key
    return x

# Inputs
a = sint.get_input_from(0)
b = sint.get_input_from(1)
c = sint.get_input_from(2)

# Array of (duplicate) inputs
n = 50
A = Array(n, sint)
@for_range(n)
def f(i):
    A[i] = sint(a)

# Compute equalities
# if 0:
#     sum = 0
#     for _ in range(n):
#         sum += (A[i] == 5)

# Compute mimc
zs = Array(n, sint)
@for_range(n)
def f(i):
    zs[i] = mimc_prf(a, i)
y = sum(zs)
print_ln('Computing %s instances of MIMC', n)
y = mimc_prf(a, b)
print_ln('MiMC(%s, %s) = %s', a.reveal(), b.reveal(), y.reveal())

print_ln('\n-----------------------------------------------------------------------\n')
print_ln('\t\t\t\t\tTEST COMPARISON')
print_ln('\n-----------------------------------------------------------------------\n')

x = sint(1)
z = x + 5
print_ln('ADD(%s, 5) = %s', x.reveal(), z.reveal())

q = sint(5)
p = q > 3
print_ln('%s > 3 = %s', q.reveal(), p.reveal())
print_ln('\n-----------------------------------------------------------------------\n')
